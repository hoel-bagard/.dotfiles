# Mostly taken from https://github.com/alfunx/.dotfiles/blob/master/.gitconfig

[user]
	email = hoel.bagard@gmail.com
	name = Hoel Bagard
	signingkey = 4F2E04C61B7ED6D3

[includeIf "gitdir:~/work-hitachi/"]
path = "~/hitachi-dotfiles/.gitconfig"

[core]
	editor = nvim

[credential]
	helper = cache --timeout=7200

[pull]
	rebase = false

# https://git-scm.com/docs/git-config#Documentation/git-config.txt-pushdefault
[push]
	default = current
	autoSetupRemote = true

[commit]
	gpgsign = true
	verbose = true

[init]
	defaultBranch = master

[format]
	pretty = lf

# https://git-scm.com/docs/git-diff#Documentation/git-diff.txt---color-movedltmodegt
[diff]
	colorMoved = default
	algorithm = histogram
	submodule = log

# Delta begin https://github.com/dandavison/delta
[pager]
	diff = delta
	log = delta
	reflog = delta
	show = delta

[interactive]
	diffFilter = delta --color-only --features=interactive

[delta "interactive"]
    keep-plus-minus-markers = false

[delta]
	features = decorations
	side-by-side = true
	navigate = true
	syntax-theme = Coldark-Dark
	plus-style = syntax "#003800"
# Delta end

[pretty]
	lo  = tformat:%C(auto)%h%C(reset)%C(auto)%d%C(reset) %s %C(italic blue)%ad%C(reset) %C(241)%aN%C(reset)
	lc  =  format:%C(auto)%h%C(reset) %C(white)-%C(reset) %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%C(auto)%d%C(reset)%n %C(white)⤷%C(reset) %s %C(241)- %aN <%aE>%C(reset)%n
	lt  =  format:%C(auto)%h%C(reset) %C(white)-%C(reset) %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%C(auto)%d%C(reset)%n %C(white)⤷%C(reset) %s %C(241)- %aN <%aE>%C(reset)%n%w(0,7,7)%+(trailers:only,unfold)
	lf  =  format:%C(auto)%h%C(reset)%C(auto)%d%C(reset)   %C(italic 239)[P: %p] [T: %t]%C(reset)%n%C(white)Author:%C(reset)   %aN %C(241)<%aE>%C(reset)%n          %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%n%C(white)Commit:%C(reset)   %cN %C(241)<%cE>%C(reset)   %C(italic 239)[GPG: %G?% GK]%C(reset)%n          %C(italic blue)%cd%C(reset) %C(italic cyan)(%cr)%C(reset)%w(0,4,4)%n%n%C(bold)%s%C(reset)%n%n%-b%n%n%-N%n
	rlo = tformat:%C(auto)%h%C(reset) %C(bold yellow)(%C(magenta)%gd%C(bold yellow))%C(reset)%C(auto)%d%C(reset) %gs %C(italic blue)%ad%C(reset) %C(241)%aN%C(reset)
	rlc =  format:%C(auto)%h%C(reset) %C(white)-%C(reset) %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%C(auto)%d%C(reset)%n %C(white)⤷%C(reset) %s %C(241)- %aN <%aE>%C(reset)%n %C(white)⤷%C(reset) %C(bold yellow)(%C(magenta)%gd%C(bold yellow))%C(reset) %gs %C(241)- %gN <%gE>%C(reset)%n
	rlt =  format:%C(auto)%h%C(reset) %C(white)-%C(reset) %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%C(auto)%d%C(reset)%n %C(white)⤷%C(reset) %s %C(241)- %aN <%aE>%C(reset)%n %C(white)⤷%C(reset) %C(bold yellow)(%C(magenta)%gd%C(bold yellow))%C(reset) %gs %C(241)- %gN <%gE>%C(reset)%n%w(0,7,7)%+(trailers:only,unfold)
	rlf =  format:%C(auto)%h%C(reset) %C(bold yellow)(%C(magenta)%gd%C(bold yellow))%C(reset)%C(auto)%d%C(reset)   %C(italic 239)[P: %p] [T: %t]%C(reset)%n%C(white)Author:%C(reset)   %aN %C(241)<%aE>%C(reset)%n          %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%n%C(white)Commit:%C(reset)   %cN %C(241)<%cE>%C(reset)   %C(italic 239)[GPG: %G?% GK]%C(reset)%n          %C(italic blue)%cd%C(reset) %C(italic cyan)(%cr)%C(reset)%n%C(white)Reflog:%C(reset)   %gN %C(241)<%gE>%C(reset)%n          %C(italic)%gs%C(reset)%w(0,4,4)%n%n%C(bold)%s%C(reset)%n%n%-b%n%n%-N%n

[web]
	browser = chrome

[alias]
	ec = "!f() { [ -f \"${XDG_CONFIG_HOME:-$HOME/.config}\"/dotfiles.conf ] && . \"${XDG_CONFIG_HOME:-$HOME/.config}\"/dotfiles.conf; git --git-dir=\"$dotfiles_dir\" config --global --edit; }; f"
	ecl = config --edit

	ck = checkout
	ckb = checkout -b

	# log, current branch
	l  = log --pretty=lc --graph
	lo = log --pretty=lo --graph --date=human
	ls = log --pretty=lo --graph --date=human --simplify-by-decoration
	lf = log --pretty=lf --graph
	ld = log --pretty=lf --graph --cc --stat
	lp = log --pretty=lf --graph --cc --patch

	# log, all branches+tags on all remotes
	la  = log --pretty=lc --graph                                       --all
	lao = log --pretty=lo --graph --date=human                          --all
	las = log --pretty=lo --graph --date=human --simplify-by-decoration --all
	laf = log --pretty=lf --graph                                       --all
	lad = log --pretty=lf --graph --cc --stat                           --all
	lap = log --pretty=lf --graph --cc --patch                          --all

	# log, all branches+tags on remotes 'origin' and 'upstream'
	lg = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all -n 15
	lgo = log --pretty=lo --graph --date=human                          --branches=* --tags=* --remotes=origin --remotes=upstream
	lgs = log --pretty=lo --graph --date=human --simplify-by-decoration --branches=* --tags=* --remotes=origin --remotes=upstream
	lgf = log --pretty=lf --graph                                       --branches=* --tags=* --remotes=origin --remotes=upstream
	lgd = log --pretty=lf --graph --cc --stat                           --branches=* --tags=* --remotes=origin --remotes=upstream
	lgp = log --pretty=lf --graph --cc --patch                          --branches=* --tags=* --remotes=origin --remotes=upstream

	# reflog
	rl  = reflog --pretty=rlc
	rlo = reflog --pretty=rlo
	rlf = reflog --pretty=rlf
	rld = reflog --pretty=rlf --stat

	# stash
	sl  = stash list --pretty=rlc
	slo = stash list --pretty=rlo
	slf = stash list --pretty=rlf
	sld = stash list --pretty=rlf --stat
	sls = stash show --patch

	# inspection
	sh = show --stat --cc --summary --patch
	grep = grep -Ii

	# diff
	d = diff -c
	ds = diff --find-renames --stat --cc -c

	# status
	s = status
	si = status --ignored
	sa = status --ignored --untracked-files

	# index
	a = add
	aa = add --all
	au = add --update
	ai = add --interactive
	ap = add --patch
	an = add --intent-to-add

	# commit
	c = commit --verbose -am
	cm = commit --verbose -m
	cs = commit --verbose --squash
	ca = commit --verbose --amend
	can = commit --verbose --amend --no-edit

  # network (in)
	cl = clone
	p = pull

	# network (out)
	pu = push
	pun = push --no-verify
	puf = push --force-with-lease
	puff = push --force

	# submodule
	sub = submodule
	subu = submodule update --init --recursive

	# merge
	m = merge
	ma = merge --abort
	mc = merge --continue
	mff = merge --ff-only

	# rebase
	r = rebase
	ra = rebase --abort
	rc = rebase --continue
	rq = rebase --quit
	rs = rebase --skip
	ret = rebase --edit-todo
	rsh = rebase --show-current-patch

	# interactive rebase
	ri = rebase --interactive

	# cherry-pick
	cp = cherry-pick
	cpa = cherry-pick --abort
	cpc = cherry-pick --continue
	cpq = cherry-pick --quit

	# revert
	rv = revert
	rva = revert --abort
	rvc = revert --continue
	rvq = revert --quit

	# reset
	re = reset
	res = reset --soft
	reh = reset --hard

  # w-commands
	which = branch --all --contains
	which-tag = describe --always --contains
	who = shortlog --summary --numbered --no-merges
	whoami = "!echo $(git config --get user.name) '<'$(git config --get user.email)'>'"

	# show authors and and commit counts
	#    git thanks [<git-log-args>...]
	thanks = "!f() { git log --pretty=tformat:'%aN <%aE>' \"$@\" | sort | uniq -c | sort -rn; }; f"

	# open GitHub repository in browser
	#    git open [<remote>]
	open = "!f() { URL=$(git config remote.${1:-origin}.url); xdg-open \"${URL%%.git}\"; }; f"

  # hard reset and clean (unrecoverable)
	nuke = "!git reset --hard HEAD && git clean -fd"


[url "git@github.com:"]
	insteadOf = gh:

[url "git@github.com:"]
	insteadOf = "https://github.com/"

[url "git@gitlab.com:"]
	insteadOf = gl:

[merge]
	tool = zdiff3  # vimdiff

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[rebase]
	autosquash = true
	autostash = true

[help]
	autocorrect = 10

[transfer]
	fsckobjects = true
[fetch]
	fsckobjects = true
[receive]
	fsckObjects = true
[status]
	submoduleSummary = true
[submodule]
	recurse = true
